max_executionn_time=600
memory_limit=512M
error_reporting=1
display_errors=0
log_errors=1
user_ini.filename=
realpath_cache_size=2M
cgi.check_shebang_line=0

#zend_extension=opcache.so
opcache.enable_cli=1
opcache.save_comments=0
opcache.fast_shutdown=1
opcache.validate_timestamps=1
opcache.revalidate_freq=60
opcache.use_cwd=1
opcache.max_accelerated_files=100000
opcache.max_wasted_percentage=5
opcache.memory_consumption=128
opcache.consistency_checks=0

extension=inotify.so

;extension=msgpack.so

;extension=ds.so


[session]
session.save_handler = files
;session.save_path = "/tmp"
session.use_strict_mode = 0
session.use_cookies = 1
;session.cookie_secure =
session.use_only_cookies = 1
session.name = PHPSESSID
session.auto_start = 0
session.cookie_lifetime = 0
session.cookie_path = /
session.cookie_domain =
session.cookie_httponly =
session.serialize_handler = php
session.gc_probability = 1
session.gc_divisor = 1000
session.gc_maxlifetime = 1440
session.referer_check =
session.cache_limiter = nocache
session.cache_expire = 180
session.use_trans_sid = 0
session.sid_length = 26
session.trans_sid_tags = "a=href,area=href,frame=src,form="
;session.trans_sid_hosts=""
session.sid_bits_per_character = 5
;session.upload_progress.enabled = On
;session.upload_progress.cleanup = On
;session.upload_progress.prefix = "upload_progress_"
;session.upload_progress.name = "PHP_SESSION_UPLOAD_PROGRESS"
;session.upload_progress.freq =  "1%"
;session.upload_progress.min_freq = "1"
;session.lazy_write = On
[swoole]
extension=swoole.so

[yaconf]
extension=yaconf.so

[redis]
extension=redis.so


[yac]
extension=yac.so
yac.enable = 1
yac.keys_memory_size = 4M ; 4M can get 30K key slots, 32M can get 100K key slots
yac.values_memory_size = 256M
yac.compress_threshold = -1
yac.enable_cli = 1 ; whether enable yac with cli, default 0

[xdebug]
zend_extension="xdebug.so"
xdebug.remote_enable=1
xdebug.remote_connect_back=1
xdebug.remote_autostart=1
xdebug.profiler_enable=1
xdebug.profiler_output_dir="/home/logs/xdebug/xdebug-profiler"

;其余参数
;;;;开启自动跟踪。自动打开"监测函数调用过程"的功模。该功能可以在你指定的目录中将函数调用的监测信息以文件的形式输出
;;;xdebug.auto_trace           = On
;;;;开启异常跟踪
;;;xdebug.show_exception_trace = On
;;;;收集变量
;;;xdebug.collect_vars         = On
;;;;收集返回值
;;;xdebug.collect_return       = On
;;;;收集参数
;;;xdebug.collect_params       = On
;;;;显示局部变量
;;;xdebug.show_local_vars      = On
;;;;显示默认的错误信息
;;;xdebug.default_enable       = On
;;;;用于zend studio远程调试的应用层通信协议
;;;xdebug.remote_handler       = dbgp
;;;;如果设得太小,函数中有递归调用自身次数太多时会报超过最大嵌套数错
;;;xdebug.max_nesting_level    = 10000

[yaf]
extension=yaf.so
yaf.environ=local
